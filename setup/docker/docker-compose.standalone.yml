# VirtualPyTest Standalone - Complete Local Setup
# Everything included: Database + Backend Services + Frontend + Monitoring
# Use: docker-compose -f docker-compose.standalone.yml up

services:
  # Main PostgreSQL Database - VirtualPyTest Application Data
  postgres:
    image: postgres:15-alpine
    container_name: virtualpytest-postgres
    environment:
      - POSTGRES_DB=virtualpytest
      - POSTGRES_USER=virtualpytest_user
      - POSTGRES_PASSWORD=virtualpytest_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../../setup/db/schema:/docker-entrypoint-initdb.d  # Auto-run migration files
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U virtualpytest_user -d virtualpytest"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB

  # Grafana Metrics Database - Separate for monitoring data
  grafana_metrics_db:
    image: postgres:15-alpine
    container_name: virtualpytest-grafana-metrics
    environment:
      - POSTGRES_DB=grafana_metrics
      - POSTGRES_USER=grafana_user
      - POSTGRES_PASSWORD=grafana_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - grafana-metrics-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grafana_user -d grafana_metrics"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Backend Host - Device Controller
  backend_host:
    build:
      context: ../../
      dockerfile: backend_host/Dockerfile
    container_name: virtualpytest-backend-host
    ports:
      - "6109:6109"
    volumes:
      - ../../shared:/app/shared:ro
      - ../../backend_core:/app/backend_core:ro
      - /dev:/dev  # Hardware access for device control
    environment:
      - HOST_PORT=6109
      - HOST_NAME=standalone-host-1
      - HOST_URL=http://localhost:6109
      - SERVER_URL=http://backend_server:5109
      - DEBUG=false
      
      # Local PostgreSQL Configuration
      - DATABASE_URL=postgresql://virtualpytest_user:virtualpytest_pass@postgres:5432/virtualpytest
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=virtualpytest
      - POSTGRES_USER=virtualpytest_user
      - POSTGRES_PASSWORD=virtualpytest_pass
      
    depends_on:
      postgres:
        condition: service_healthy
    privileged: true  # Required for hardware access
    restart: unless-stopped

  # Backend Server - API + Grafana
  backend_server:
    build:
      context: ../../
      dockerfile: backend_server/Dockerfile
    container_name: virtualpytest-backend-server
    ports:
      - "5109:5109"  # nginx proxy (Flask API + Grafana)
      - "3001:3001"  # Grafana direct access
    volumes:
      - ../../shared:/app/shared:ro
      - ../../backend_core:/app/backend_core:ro
      - grafana-data:/var/lib/grafana
      - grafana-logs:/var/log/grafana
    environment:
      - SERVER_PORT=5109
      - SERVER_URL=http://localhost:5109
      - DEBUG=false
      - CORS_ORIGINS=http://localhost:3000
      
      # Local PostgreSQL Configuration
      - DATABASE_URL=postgresql://virtualpytest_user:virtualpytest_pass@postgres:5432/virtualpytest
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=virtualpytest
      - POSTGRES_USER=virtualpytest_user
      - POSTGRES_PASSWORD=virtualpytest_pass
      
      # Grafana Configuration
      - GRAFANA_ADMIN_USER=admin
      - GRAFANA_ADMIN_PASSWORD=admin123
      - GRAFANA_SECRET_KEY=standalone-grafana-secret-key
      - GRAFANA_DOMAIN=localhost
      - GF_SERVER_HTTP_PORT=3001
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:5109/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      
      # Grafana PostgreSQL Datasource (points to main DB)
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=virtualpytest
      - GF_DATABASE_USER=virtualpytest_user
      - GF_DATABASE_PASSWORD=virtualpytest_pass
      
    depends_on:
      postgres:
        condition: service_healthy
      grafana_metrics_db:
        condition: service_healthy
    restart: unless-stopped

  # Frontend - React Web Interface
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: virtualpytest-frontend
    ports:
      - "3000:80"
    environment:
      - BACKEND_API_URL=http://backend_server:5109
      - VITE_SERVER_URL=http://localhost:5109
      - VITE_DATABASE_TYPE=postgresql
    depends_on:
      - backend_server
    restart: unless-stopped

volumes:
  # Main application database
  postgres-data:
    name: virtualpytest-postgres-data
  # Grafana metrics database  
  grafana-metrics-data:
    name: virtualpytest-grafana-metrics-data
  # Grafana configuration and dashboards
  grafana-data:
    name: virtualpytest-grafana-data
  grafana-logs:
    name: virtualpytest-grafana-logs

networks:
  default:
    name: virtualpytest-standalone-network
    driver: bridge
