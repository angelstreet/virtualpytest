services:
  # Shared library service
  shared:
    build:
      context: ../
      dockerfile: shared/Dockerfile
    volumes:
      - shared-lib:/app/shared
    command: tail -f /dev/null

  # Backend host service (hardware interface)
  backend_host:
    build:
      context: ../
      dockerfile: backend_host/Dockerfile
    ports:
      - "6109:6109"
    volumes:
      - ../shared:/app/shared:ro
      - ../backend_core:/app/backend_core:ro
      - /dev:/dev  # Hardware access
    environment:
      - HOST_PORT=6109
      - HOST_NAME=docker-host-1
      - HOST_URL=http://localhost:6109
      - SERVER_URL=http://backend_server:5109
      - DEBUG=false
    depends_on:
      - shared
    privileged: true  # Required for hardware access
    restart: unless-stopped

  # Backend server service (API + Grafana)
  backend_server:
    build:
      context: ../
      dockerfile: backend_server/Dockerfile
    ports:
      - "5109:5109"  # Flask API
      - "3001:3000"  # Grafana (mapped to 3001 to avoid conflict with frontend)
    volumes:
      - ../shared:/app/shared:ro
    environment:
      - SERVER_PORT=5109
      - SERVER_URL=http://localhost:5109
      - DEBUG=false
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
      # Grafana configuration
      - GRAFANA_ADMIN_USER=admin
      - GRAFANA_ADMIN_PASSWORD=admin123
      - GRAFANA_SECRET_KEY=docker-grafana-secret-key
      - GRAFANA_DOMAIN=localhost
      # Database connection (add your Supabase credentials)
      - DATABASE_URL=postgresql://postgres:password@db.project-id.supabase.co:5432/postgres
      - NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key
    depends_on:
      - shared
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - BACKEND_API_URL=http://backend_server:5109
      - VITE_SERVER_URL=http://localhost:5109
    depends_on:
      - backend_server
    restart: unless-stopped

volumes:
  shared-lib:

networks:
  default:
    name: virtualpytest-network 