##
# Default server configuration
##

server {
    listen 8082;
    listen [::]:8082;

    # HLS Video Streams with Hot/Cold Storage Support
    location ~ ^/host/stream/([^/]+)/(captures|thumbnails|segments|metadata|audio)/(.+)$ {
        alias /var/www/html/stream/;
        try_files /$1/hot/$2/$3 /$1/$2/$3 =404;
        
        # CORS headers for HLS streaming
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # Cache control based on file type
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            return 204;
        }
    }
    
    location /host/stream/ {
        alias /var/www/html/stream/;
        
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            return 204;
        }
        
        try_files $uri $uri/ =404;
        autoindex on;
    }

    # Captures for all captures
    location /host/captures/ {
        alias /var/www/html/stream/captures/;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range";
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            return 204;
        }
        try_files $uri $uri/ =404;
        autoindex on;
    }

    # noVNC proxy
    location /host/vnc/ {
        proxy_pass http://127.0.0.1:6072/;
        proxy_set_header Host $host;
    }

    # noVNC lite redirect
    location = /host/vnc_lite.html {
        rewrite ^ /host/vnc/vnc_lite.html permanent;
    }

    # WebSocket proxy for VNC
    location /websockify {
        proxy_pass http://127.0.0.1:6072/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Accept, Upgrade, Connection";
    }

    # Sunri-pi2 proxy (host API)
    location /host/ {
        proxy_pass http://127.0.0.1:6209;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}