##
# Local development server configuration for VirtualPyTest
# This configuration is used for local installations (localhost)
# Template file - 127.0.0.1 will be replaced during installation
##

# HTTP server for local development (no HTTPS redirect)
server {
    listen 80;
    listen [::]:80;
    server_name localhost 127.0.0.1;
    
    # Root directory for static files
    root /var/www/html;
    index index.html index.htm;

    # Security headers for local development
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Frontend (React app)
    location / {
        proxy_pass http://127.0.0.1:5073;
        proxy_set_header Host $host;
    
        # WebSocket support for development
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Backend Server API
    location /server/ {
        proxy_pass http://127.0.0.1:5109;
        proxy_set_header Host $host;
    }

    # Backend Host API
    location /host/ {
        proxy_pass http://127.0.0.1:6109;
        proxy_set_header Host $host;
    }

    # Grafana (local development)
    location /grafana/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        
        # Grafana WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Handle redirects properly
        proxy_redirect off;
    }

    # noVNC Web Interface (VNC access via browser)
    location /host/vnc/ {
        proxy_pass http://127.0.0.1:6080/;
        proxy_set_header Host $host;

        # WebSocket support for VNC
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Direct VNC access (for testing)
    location /host/vnc_lite.html {
        proxy_pass http://127.0.0.1:6080/vnc_lite.html;
        proxy_set_header Host $host;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
     # WebSocket proxy for VNC
    location /websockify {
        proxy_pass http://127.0.0.1:6080/;
        proxy_set_header Host $host;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # CORS for WebSocket
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Accept, Upgrade, Connection";
    }
    # HLS Video Streams with Hot/Cold Storage Support
    location ~ ^/host/stream/([^/]+)/(captures|thumbnails|segments|metadata|audio|transcript)/(.+)$ {
        alias /var/www/html/stream/;
        try_files /$1/hot/$2/$3 /$1/$2/$3 =404;
        
        # CORS headers for HLS streaming
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # Cache control based on file type
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            return 204;
        }
    }
    
    location /host/stream/ {
        alias /var/www/html/stream/;
        
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            return 204;
        }
        
        try_files $uri $uri/ =404;
        autoindex on;
    }

    # Static file serving for captures (matches production config)
    location /host/captures/ {
        alias /var/www/html/stream/captures/;
        
        # CORS headers for image access
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        
        try_files $uri $uri/ =404;
        autoindex on;
    }

    # Static files and assets
    location /static/ {
        alias /var/www/html/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html;
    }

    # Logging for local development
    access_log /var/log/nginx/virtualpytest_local_access.log;
    error_log /var/log/nginx/virtualpytest_local_error.log;
}